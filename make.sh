#!/bin/bash

#
# $1 PLATFORM
# $2 VERSION
#
generate_indexes(){

    PLATFORM_DIRS="headers request response schemas parameters"
    PLATFORM=${1}
    VERS=v${2}

    for MAIN_DIR in ${PLATFORM_DIRS}; do
        rm -f "content/${PLATFORM}/${VERS}/${MAIN_DIR}/${PLATFORM}_index.yaml"
        echo "#This file is automatically generated" >> "content/${PLATFORM}/${VERS}/${MAIN_DIR}/${PLATFORM}_index.yaml"
        SUB_DIR_LIST=$(ls -d content/${PLATFORM}/${VERS}/${MAIN_DIR}/*/ 2>/dev/null| rev| cut -d '/' -f 2 | rev)
        for SUB_DIR in ${SUB_DIR_LIST}; do
            FL_LIST=$(ls content/${PLATFORM}/${VERS}/${MAIN_DIR}/${SUB_DIR})
            for VAR in ${FL_LIST}; do
                FL_ID=$(echo $VAR | cut -d '.' -f 1)
                echo ${SUB_DIR}-${FL_ID}: >> "content/${PLATFORM}/${VERS}/${MAIN_DIR}/${PLATFORM}_index.yaml"
                echo '  $ref: "./'${SUB_DIR}"/"${VAR}'"' >> "content/${PLATFORM}/${VERS}/${MAIN_DIR}/${PLATFORM}_index.yaml"
            done
        done
    done

}

generate_flat(){

    FILE_NAME=${PLATFORM}_v${VERSION}.yaml
    FLAT_JSON=${PLATFORM}_v${VERSION}.json
    FLAT_YAML=${PLATFORM}_v${VERSION}.yaml

    mkdir -p bin

    cp routers/${PLATFORM}/${PLATFORM}_v${VERSION}.yaml .

    ./node_modules/.bin/swagger-cli bundle ${FILE_NAME} > ./bin/${FLAT_JSON}
    ./node_modules/.bin/json2yaml ./bin/${FLAT_JSON} > ./bin/${FLAT_YAML}
    rm -f ${PLATFORM}_v${VERSION}.yaml

}

generate_html(){

    FLAT_YAML=${PLATFORM}_v${VERSION}.yaml
    HTML_DOC_BOOTPRINT="bin/"${PLATFORM}_v${VERSION}"_bootprint.html"
    HTML_DOC_PYTHON="bin/"${PLATFORM}_v${VERSION}"_python.html"

    node node_modules/bootprint/bin/bootprint.js openapi bin/${FLAT_YAML} tmp/
    ./node_modules/.bin/html-inline tmp/index.html > ${HTML_DOC_BOOTPRINT}
    python tools/yamlHTML.py < bin/${FLAT_YAML} > ${HTML_DOC_PYTHON}
}

#check input argumennts
if [[ $# -le 1 ]] ; then
    echo 'ERROR - platform not defined!'
    echo 'Valid platform is [wr1]'
    echo 'start with ./make.sh <platform> <version>'
    echo 'eg. ./make.sh wr1 2'
    exit 1
fi


PLATFORM="${1}"
VERSION="${2}"

if [ ! -f "routers/${PLATFORM}/${PLATFORM}_v${VERSION}.txt" ]; then
    echo "NO FILE: routers/${PLATFORM}/${PLATFORM}_v${VERSION}.txt"
    echo "TRY: ./tools/doc_gen.sh ${PLATFORM} apiv[n].lua"
    exit 1
fi

if [ ! -d "content/${PLATFORM}/v${VERSION}" ]; then
    echo "NO FOLDER: content/${PLATFORM}/v${VERSION}"
    echo "TRY: ./tools/doc_gen.sh ${PLATFORM} apiv[n].lua"
    exit 1
fi

PLATFORMS=$(cat routers/${PLATFORM}/${PLATFORM}_v${VERSION}.txt)
PLATFORM_CONST=${PLATFORM}
for VAR in ${PLATFORMS}; do
    PLATFORM=${VAR}
    generate_indexes ${PLATFORM} ${VERSION}
    generate_flat
    generate_html
done

if [ "${PLATFORMS}" != "${PLATFORM_CONST}" ]; then
    echo "### Merging yaml files ###"
    PLATFORM=$(node tools/yamlMerge.js "${PLATFORM_CONST}" "v${VERSION}" "${PLATFORMS}")
    generate_html
fi

rm -rf tmp/